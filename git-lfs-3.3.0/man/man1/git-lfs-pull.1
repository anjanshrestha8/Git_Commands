'\" t
.\"     Title: git-lfs-pull
.\"    Author: [see the "AUTHOR(S)" section]
.\" Generator: Asciidoctor 2.0.18
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "GIT\-LFS\-PULL" "1" "" "\ \&" "\ \&"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH "NAME"
git-lfs-pull \- Download all Git LFS files for current ref & checkout
.SH "SYNOPSIS"
.sp
\f(CRgit lfs pull\fP [options] [<remote>]
.SH "DESCRIPTION"
.sp
Download Git LFS objects for the currently checked out ref, and update
the working copy with the downloaded content if required.
.sp
This is equivalent to running the following 2 commands:
.sp
git lfs fetch [options] [] git lfs checkout
.SH "OPTIONS"
.sp
\f(CR\-I <paths>\fP, \f(CR\-\-include=<paths>\fP
.RS 4
Specify lfs.fetchinclude just for this invocation; see INCLUDE AND EXCLUDE
.RE
.sp
\f(CR\-X <paths>\fP, \f(CR\-\-exclude=<paths>\fP
.RS 4
Specify lfs.fetchexclude just for this invocation; see INCLUDE AND EXCLUDE
.RE
.SH "INCLUDE AND EXCLUDE"
.sp
You can configure Git LFS to only fetch objects to satisfy references in
certain paths of the repo, and/or to exclude certain paths of the repo,
to reduce the time you spend downloading things you do not use.
.sp
In your Git configuration or in a \f(CR.lfsconfig\fP file, you may set either
or both of \f(CRlfs.fetchinclude\fP and \f(CRlfs.fetchexclude\fP to comma\-separated
lists of paths. If \f(CRlfs.fetchinclude\fP is defined, Git LFS objects will
only be fetched if their path matches one in that list, and if
\f(CRlfs.fetchexclude\fP is defined, Git LFS objects will only be fetched if
their path does not match one in that list. Paths are matched using
wildcard matching as per gitignore(5).
.sp
Note that using the command\-line options \f(CR\-I\fP and \f(CR\-X\fP override the
respective configuration settings. Setting either option to an empty
string clears the value.
.SH "DEFAULT REMOTE"
.sp
Without arguments, pull downloads from the default remote. The default
remote is the same as for \f(CRgit pull\fP, i.e. based on the remote branch
you\(cqre tracking first, or origin otherwise.
.SH "SEE ALSO"
.sp
git\-lfs\-fetch(1), git\-lfs\-checkout(1), gitignore(5).
.sp
Part of the git\-lfs(1) suite.