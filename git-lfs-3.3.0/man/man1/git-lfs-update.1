'\" t
.\"     Title: git-lfs-update
.\"    Author: [see the "AUTHOR(S)" section]
.\" Generator: Asciidoctor 2.0.18
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "GIT\-LFS\-UPDATE" "1" "" "\ \&" "\ \&"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH "NAME"
git-lfs-update \- Update Git hooks
.SH "SYNOPSIS"
.sp
\f(CRgit lfs update\fP [\-\-manual | \-\-force]
.SH "DESCRIPTION"
.sp
Updates the Git hooks used by Git LFS. Silently upgrades known hook
contents. If you have your own custom hooks you may need to use one of
the extended options below.
.SH "OPTIONS"
.sp
\f(CR\-\-manual\fP, \f(CR\-m\fP
.RS 4
Print instructions for manually updating your hooks to include git\-lfs
functionality. Use this option if \f(CRgit lfs update\fP fails because of existing
hooks and you want to retain their functionality.
.RE
.sp
\f(CR\-\-force\fP, \f(CR\-f\fP
.RS 4
Forcibly overwrite any existing hooks with git\-lfs hooks. Use this option if
\f(CRgit lfs update\fP fails because of existing hooks but you don\(cqt care about
their current contents.
.RE
.SH "SEE ALSO"
.sp
Part of the git\-lfs(1) suite.